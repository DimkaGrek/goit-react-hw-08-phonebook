{"version":3,"file":"static/js/330.ef88f7a5.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","_ref","id","useId","ref","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","_createForOfIteratorHelper","values","s","n","done","err","e","f","register","delete","undefined","forEach","_","PresenceContext","Map","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","callback","forceRender","useContext","LayoutGroupContext","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","useCallback","frame","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","_toConsumableArray","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","Queue","order","scheduled","Set","process","add","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","performance","now","Math","max","min","wake","keepAlive","immediate","_createRenderBatcher","requestAnimationFrame","noop","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","queueMicrotask","microtask","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","skipAnimations","useManualTiming","any","useLayoutEffect"],"sourceRoot":""}