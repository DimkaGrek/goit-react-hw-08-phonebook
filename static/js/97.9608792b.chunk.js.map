{"version":3,"file":"static/js/97.9608792b.chunk.js","mappings":"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","sources":["schemas/contactSchema.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .max(30, 'Max length must be less than 30 chars'),\n  number: yup\n    .string()\n    .required('Phone is required')\n    .min(10, 'Min length must be more than 6 chars')\n    .max(18, 'Max length must be less than 18 chars'),\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { selectContacts } from '../../redux/contactSlice';\nimport { addContact } from '../../redux/operations';\nimport { contactSchema } from 'schemas/contactSchema';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(contactSchema),\n  });\n\n  const submit = data => {\n    console.log('add contact data: =>>>>', data);\n\n    if (checkContact(data.name)) {\n      return;\n    }\n\n    dispatch(addContact(data));\n    reset();\n  };\n\n  const checkContact = name => {\n    const checkName = name.toLowerCase();\n    const isExist = contacts.find(\n      item => item.name.toLowerCase() === checkName\n    );\n    if (isExist) {\n      alert(`${name} is already exist`);\n    }\n    return isExist;\n  };\n\n  console.log('contacts in state ->>>>>', contacts);\n\n  return (\n    <div className=\"container mx-auto\">\n      <form\n        onSubmit={handleSubmit(submit)}\n        className=\"flex gap-4 justify-center\"\n      >\n        <div>\n          <input\n            {...register('name')}\n            type=\"text\"\n            placeholder=\"Insert name\"\n            className=\"appearance-none rounded-full nm-inset-gray-200 leading-5 px-8 py-4 flex-grow w-full focus:nm-inset-gray-300 focus:outline-none\"\n          />\n          <p className=\"pt-1 text-red-500 text-sm text-center\">\n            {errors.name?.message}\n          </p>\n        </div>\n\n        <div>\n          <input\n            {...register('number')}\n            type=\"text\"\n            placeholder=\"Insert phone\"\n            className=\"appearance-none rounded-full nm-inset-gray-200 leading-5 px-8 py-4 flex-grow w-full focus:nm-inset-gray-300 focus:outline-none\"\n          />\n          <p className=\"pt-1 text-red-500 text-sm text-center\">\n            {errors.number?.message}\n          </p>\n        </div>\n\n        <div>\n          <button\n            type=\"submit\"\n            className=\"rounded-full nm-flat-gray-200 hover:nm-flat-gray-200-lg leading-5 px-8 py-4 text-gray-600 font-bold  transition duration-200 ease-in-out transform hover:scale-110\"\n          >\n            Add contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from '../../redux/contactSlice';\nimport { selectFilter } from '../../redux/filterSlice';\nimport { deleteContact, fetchContacts } from '../../redux/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const filterLowCase = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowCase)\n    );\n  };\n  const [isEdit, setIsEdit] = useState(false);\n\n  const filteredContacts = getFilteredContacts();\n\n  const getSortedContacts = filterContacts => {\n    return filterContacts.sort((a, b) => b.id - a.id);\n  };\n  const sortedContacts = getSortedContacts(filteredContacts);\n\n  return (\n    <>\n      <ul className=\"px-6 grid grid-cols-3 py-6 gap-6 container mx-auto\">\n        {sortedContacts.map(({ id, name, number }) => (\n          <li\n            key={id}\n            className=\"nm-flat-gray-200-lg rounded-lg p-8 text-center max-w-sm w-full\"\n          >\n            <p className=\"p-2\">\n              <span>Name: </span>\n              {isEdit ? (\n                <input\n                  value=\"Dimkagrek Zinkovsky\"\n                  className=\"appearance-none text-center rounded-full nm-inset-gray-200 leading-5 mx-2 px-2 py-2 flex-grow w-2/3 focus:nm-inset-gray-300 focus:outline-none\"\n                />\n              ) : (\n                <span className=\"font-bold\">{name}</span>\n              )}\n            </p>\n            <p className=\"p-2\">\n              <span>Phone: </span>\n              {isEdit ? (\n                <input\n                  value=\"068 701 60 66\"\n                  className=\"appearance-none text-center rounded-full nm-inset-gray-200 leading-5 mx-2 px-2 py-2 flex-grow w-2/3 focus:nm-inset-gray-300 focus:outline-none\"\n                />\n              ) : (\n                <span className=\"font-bold\">{number}</span>\n              )}\n            </p>\n            <div className=\"card-actions justify-end py-2\">\n              {isEdit ? (\n                <button\n                  className=\"w-12 h-12 flex justify-center items-center rounded-full nm-convex-gray-200-xs hover:nm-inset-gray-200-xs hover:font-semibold text-sm\"\n                  onClick={() => setIsEdit(false)}\n                >\n                  Save\n                </button>\n              ) : (\n                <button\n                  className=\"w-12 h-12 flex justify-center items-center rounded-full nm-convex-gray-200-xs hover:nm-inset-gray-200-xs hover:font-semibold text-sm\"\n                  onClick={() => setIsEdit(true)}\n                >\n                  Edit\n                </button>\n              )}\n              <button\n                onClick={() => dispatch(deleteContact(id))}\n                className=\"w-12 h-12 flex justify-center items-center rounded-full nm-convex-gray-200-xs text-red-500 hover:nm-inset-gray-200-xs hover:font-semibold text-sm\"\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport React from 'react';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <div className=\"divider py-3 font-bold text-xl\">Contacts</div>\n      <ContactList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["contactSchema","yup","name","required","max","number","min","_errors$name","_errors$number","contacts","useSelector","selectContacts","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","register","reset","handleSubmit","errors","formState","checkContact","checkName","toLowerCase","isExist","find","item","alert","concat","console","log","_jsx","className","children","_jsxs","onSubmit","data","addContact","_objectSpread","type","placeholder","message","filter","selectFilter","useEffect","fetchContacts","_useState","useState","_useState2","_slicedToArray","isEdit","setIsEdit","filteredContacts","filterLowCase","contact","includes","getFilteredContacts","sortedContacts","sort","a","b","id","_Fragment","map","_ref","value","onClick","deleteContact","ContactForm","ContactList"],"sourceRoot":""}