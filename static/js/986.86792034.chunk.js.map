{"version":3,"file":"static/js/986.86792034.chunk.js","mappings":"4RAEaA,EAAcC,EAAAA,GAAW,CACpCC,MAAOD,EAAAA,KAAaC,MAAM,sBAAsBC,SAAS,qBACzDC,SAAUH,EAAAA,KAEPE,WACAE,IAAI,EAAG,wCACPC,IAAI,GAAI,2C,mBC0Eb,EAvEc,WAAO,IAADC,EAAAC,EACZC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAIIC,EAAAA,EAAAA,IAAQ,CAAEC,UAAUC,EAAAA,EAAAA,GAAYf,KAHlCgB,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACaC,EAAMN,EAAnBO,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAEjBC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAc5B,OARAI,EAAAA,EAAAA,YAAU,WACJnB,GACFoB,EAAAA,GAAAA,MAAYpB,EAAS,CACnBqB,QAAS,kBAAMV,GAASW,EAAAA,EAAAA,MAAa,GAG3C,GAAG,CAACtB,EAASW,KAGXY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,WACrDF,EAAAA,EAAAA,MAAA,QAAMI,SAAUnB,GAfL,SAAAoB,GACbjB,GAASkB,EAAAA,EAAAA,IAAUD,GACrB,IAayCH,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAAI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMvB,EAAS,UAAQ,IACrBwB,KAAK,OACLC,YAAY,oBACZR,UAAU,wIAEZE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6CAA4CC,SAC1C,QAD0C3B,EACtDW,EAAOhB,aAAK,IAAAK,OAAA,EAAZA,EAAcmC,cAGnBV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMvB,EAAS,aAAW,IACxBwB,KAAMd,EAAW,OAAS,WAC1Be,YAAY,uBACZR,UAAU,wIAEZE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6CAA4CC,SACvC,QADuC1B,EACtDU,EAAOd,gBAAQ,IAAAI,OAAA,EAAfA,EAAiBkC,WAEpBP,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASG,QAAS,kBAAMhB,GAAY,SAAAiB,GAAI,OAAKA,CAAI,GAAC,EAACV,SAC7DR,GACCS,EAAAA,EAAAA,KAACU,EAAAA,IAAK,CAACZ,UAAU,sCAEjBE,EAAAA,EAAAA,KAACW,EAAAA,IAAU,CAACb,UAAU,2CAK5BE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,UACzDC,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLP,UAAU,qKAAoKC,SAC/K,iBAOX,C","sources":["schemas/loginSchema.js","pages/Login.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Email is not valid').required('Email is required'),\n  password: yup\n    .string()\n    .required()\n    .min(6, 'Min length must be more than 6 chars')\n    .max(18, 'Max length must be less than 18 chars'),\n});\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { userLogin } from '../redux/auth/operations';\nimport { loginSchema } from 'schemas/loginSchema';\nimport { clearError, selectIsError } from '../redux/auth/authSlice';\n\nconst Login = () => {\n  const isError = useSelector(selectIsError);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(loginSchema) });\n\n  const dispatch = useDispatch();\n\n  const [showPass, setShowPass] = useState(false);\n\n  const submit = data => {\n    dispatch(userLogin(data));\n  };\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(isError, {\n        onClose: () => dispatch(clearError()),\n      });\n    }\n  }, [isError, dispatch]);\n\n  return (\n    <div className=\"max-w-sm mx-auto\">\n      <h2 className=\"text-gray-600 text-xl font-bold mb-4\">Login</h2>\n      <form onSubmit={handleSubmit(submit)}>\n        <div className=\"mb-4\">\n          <input\n            {...register('email')}\n            type=\"text\"\n            placeholder=\"Insert your email\"\n            className=\"appearance-none rounded-full nm-inset-gray-200 leading-5 px-8 py-4 flex-grow sm:w-full focus:nm-inset-gray-300 focus:outline-none\"\n          />\n          <p className=\"px-2 pt-1 text-red-500 text-sm text-center\">\n            {errors.email?.message}\n          </p>\n        </div>\n        <div className=\"mb-4 relative\">\n          <input\n            {...register('password')}\n            type={showPass ? 'text' : 'password'}\n            placeholder=\"Insert your password\"\n            className=\"appearance-none rounded-full nm-inset-gray-200 leading-5 px-8 py-4 flex-grow sm:w-full focus:nm-inset-gray-300 focus:outline-none\"\n          />\n          <p className=\"px-2 pt-1 text-red-500 text-sm text-center\">\n            {errors.password?.message}\n          </p>\n          <button type=\"button\" onClick={() => setShowPass(prev => !prev)}>\n            {showPass ? (\n              <FaEye className=\"absolute right-6 top-4 scale-150\" />\n            ) : (\n              <FaEyeSlash className=\"absolute right-6 top-4 scale-150\" />\n            )}\n          </button>\n        </div>\n\n        <div className=\"flex justify-center sm:justify-center pt-1\">\n          <button\n            type=\"submit\"\n            className=\"rounded-full nm-flat-gray-200 hover:nm-flat-gray-200-lg leading-5 px-8 py-4 text-gray-600 font-bold  transition duration-200 ease-in-out transform hover:scale-110\"\n          >\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["loginSchema","yup","email","required","password","min","max","_errors$email","_errors$password","isError","useSelector","selectIsError","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPass","setShowPass","useEffect","toast","onClose","clearError","_jsxs","className","children","_jsx","onSubmit","data","userLogin","_objectSpread","type","placeholder","message","onClick","prev","FaEye","FaEyeSlash"],"sourceRoot":""}